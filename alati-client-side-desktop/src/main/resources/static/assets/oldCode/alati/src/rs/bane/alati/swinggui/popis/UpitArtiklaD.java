/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.bane.alati.swinggui.popis;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import rs.bane.alati.model.popis.Stavka;

/**
 *
 * @author Milan
 */
public class UpitArtiklaD extends javax.swing.JDialog {

    Connection connection;
    Stavka stavka = null;
    ArrayList<Stavka> stavke = null;

    /**
     * Creates new form NewJDialog
     */
    public UpitArtiklaD(java.awt.Frame parent, boolean modal, Connection conn) {
        super(parent, modal);
        initComponents();
        dodajOsluskivace();
        this.connection = conn;
        this.setLocationRelativeTo(parent);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        unosTB = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        otkaziBT = new javax.swing.JButton();
        ucitajBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Upit artikla");
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDENT", "KATALOŠKI BROJ", "NAZIV ARTIKLA", "J.M."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabela);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KAT_BROJ", "NAZIV", "IDENT" }));

        otkaziBT.setText("Otkaži");
        otkaziBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otkaziBTActionPerformed(evt);
            }
        });

        ucitajBT.setText("Uèitaj");
        ucitajBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ucitajBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(unosTB)
                        .addGap(18, 18, 18)
                        .addComponent(ucitajBT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(otkaziBT)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unosTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(otkaziBT)
                    .addComponent(ucitajBT))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dodajOsluskivace() {
        unosTB.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                if (unosTB.getText().length() > 1) {
                    try {
                        pomMetod();
                    } catch (Exception ex) {
                        Logger.getLogger(UpitArtiklaD.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                if (unosTB.getText().length() > 1) {
                    try {
                        pomMetod();
                    } catch (Exception ex) {
                        Logger.getLogger(UpitArtiklaD.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                if (unosTB.getText().length() > 1) {
                    try {
                        pomMetod();
                    } catch (Exception ex) {
                        Logger.getLogger(UpitArtiklaD.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

            void pomMetod() throws Exception {
                clearTable();
                stavke = ucitajFiltrirano(jComboBox1.getSelectedItem().toString(),
                        unosTB.getText(), connection);
                DefaultTableModel model = (DefaultTableModel) tabela.getModel();
                for (Stavka s : stavke) {
                    model.addRow(new Object[]{s.ident, s.katBroj, s.naziv, s.jm});
                }
            }
        });
    }

    private void clearTable() {
        DefaultTableModel mod = (DefaultTableModel) tabela.getModel();
        if (mod.getRowCount() > 0) {
            for (int i = mod.getRowCount() - 1; i > -1; i--) {
                mod.removeRow(i);
            }
        }
    }

    public ArrayList<Stavka> ucitajFiltrirano(String tipTrazenog, String trazeni, Connection konekcija) {
        ArrayList<Stavka> listaPonudjenih = new ArrayList<Stavka>();
        PreparedStatement stmt = null;
        try {
            stmt = konekcija.prepareStatement("select ident, kat_broj, naziv, jm from ma_artikli "
                    + "where upper(" + tipTrazenog + ") like ( ? );");
            if (tipTrazenog.equalsIgnoreCase("ident")) {
                stmt.setString(1, (trazeni.toUpperCase() + "%"));
            } else {
                stmt.setString(1, ("%" + trazeni.toUpperCase() + "%"));
            }
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                String ident = rs.getString("ident");
                String katBroj = rs.getString("kat_broj");
                String naziv = rs.getString("naziv");
                String jm = rs.getString("jm");
                listaPonudjenih.add(new Stavka(ident, katBroj, naziv, jm));
            }
        } catch (SQLException e) {
            Logger.getLogger(UpitArtiklaD.class.getName()).log(Level.SEVERE, null, e);
        } finally {
            try {
                stmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(UpitArtiklaD.class.getName()).log(Level.SEVERE, null, ex);
            }
            return listaPonudjenih;
        }
    }

    private void otkaziBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otkaziBTActionPerformed
        stavka = null;
        this.dispose();
    }//GEN-LAST:event_otkaziBTActionPerformed

    private void ucitajBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ucitajBTActionPerformed
        int n = tabela.getSelectedRow();
        if (n > -1) {
            System.out.println(stavke.get(n));
            stavka = stavke.get(n);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Odaberite stavku iz tabele");
        }
    }//GEN-LAST:event_ucitajBTActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        unosTB.requestFocus();
    }//GEN-LAST:event_formWindowOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton otkaziBT;
    private javax.swing.JTable tabela;
    private javax.swing.JButton ucitajBT;
    private javax.swing.JTextField unosTB;
    // End of variables declaration//GEN-END:variables
}
